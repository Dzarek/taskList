{"version":3,"sources":["components/Addtask.js","components/Task.js","components/TaskList.js","components/App.js","reportWebVitals.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","text","checked","date","active","handleText","e","setState","target","value","handleCheckbox","handleDate","handleClick","props","add","maxDate","this","styles","form_off","display","form_oon","classes","push","className","join","onClick","class","style","form_on","type","placeholder","onChange","htmlFor","borderRadius","min","max","height","width","id","cursor","backgroundColor","color","border","Component","Task","task","important","finishDate","change","fontSize","fontStyle","delete","finish","toLocaleDateString","TaskList","tasks","filter","done","length","sort","a","b","toLowerCase","activeTasks","map","doneTasks","fontWeight","App","counter","deleteTask","changeTaskStatus","Array","from","forEach","getTime","addTask","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PA2HeA,E,4MAvHbC,SAAU,IAAIC,MAAOC,cAAcC,MAAM,EAAG,I,EAE5CC,MAAQ,CACNC,KAAM,GACNC,SAAS,EACTC,KAAM,EAAKP,QACXQ,QAAQ,G,EAGVC,WAAa,SAACC,GACZ,EAAKC,SAAS,CACZN,KAAMK,EAAEE,OAAOC,S,EAGnBC,eAAiB,SAACJ,GAChB,EAAKC,SAAS,CACZL,QAASI,EAAEE,OAAON,W,EAItBS,WAAa,SAACL,GACZ,EAAKC,SAAS,CACZJ,KAAMG,EAAEE,OAAOC,S,EAInBG,YAAc,WAAO,IAAD,EACc,EAAKZ,MAA7BC,EADU,EACVA,KAAMC,EADI,EACJA,QAASC,EADL,EACKA,KAEX,EAAKU,MAAMC,IAAIb,EAAME,EAAMD,IACnB,KAATD,GACT,EAAKM,SAAS,CACZN,KAAM,GACNC,SAAS,EACTC,KAAM,EAAKP,QACXQ,QAAS,EAAKJ,MAAMI,U,4CAK1B,WAAU,IAAD,OACHW,EAAqC,EAA3BC,KAAKpB,QAAQG,MAAM,EAAG,GAAS,EAC7CgB,GAAoB,SAEpB,IAAME,EAAS,CACbC,SAAU,CACRC,QAAS,QAEXC,SAAU,CACRD,QAAS,UAIPE,EAAU,GAIhB,OAHIL,KAAKhB,MAAMI,QAAQiB,EAAQC,KAAK,WAC/BN,KAAKhB,MAAMI,QAAQiB,EAAQC,KAAK,WAGnC,qCACE,wBAEEC,UAAWF,EAAQG,KAAK,KACxBC,QAAS,kBAAM,EAAKlB,SAAS,CAAEH,QAAS,EAAKJ,MAAMI,UAHrD,SAKGY,KAAKhB,MAAMI,OAAS,mBAAGsB,MAAM,mBAAwB,MAExD,sBACEH,UAAU,OACVI,MAAOX,KAAKhB,MAAMI,OAASa,EAAOW,QAAUX,EAAOC,SAFrD,UAIE,uBACEK,UAAU,gBACVM,KAAK,OACLC,YAAY,aACZrB,MAAOO,KAAKhB,MAAMC,KAClB8B,SAAUf,KAAKX,aAEjB,uBACA,uBAAO2B,QAAQ,OAAf,gCACA,uBACEL,MAAO,CACLM,aAAc,IAEhBJ,KAAK,OACLpB,MAAOO,KAAKhB,MAAMG,KAClB+B,IAAKlB,KAAKpB,QACVuC,IAAKpB,EACLgB,SAAUf,KAAKL,aAEjB,uBACA,uBACEgB,MAAO,CACLS,OAAQ,GACRC,MAAO,IAETR,KAAK,WACL3B,QAASc,KAAKhB,MAAME,QACpBoC,GAAG,YACHP,SAAUf,KAAKN,iBAEjB,uBAAOsB,QAAQ,YAAf,wBACA,wBACEL,MAAO,CACLM,aAAc,EACdM,OAAQ,UACRC,gBAAiB,cACjBC,MAAO,qBACPC,OAAQ,mBAEVjB,QAAST,KAAKJ,YARhB,6B,GAtGY+B,aCgDPC,EAhDF,SAAC/B,GACZ,IADsB,EAIoCA,EAAMgC,KAAxD5C,EAJc,EAIdA,KAAME,EAJQ,EAIRA,KAAMmC,EAJE,EAIFA,GAAIlC,EAJF,EAIEA,OAAQ0C,EAJV,EAIUA,UAAWC,EAJrB,EAIqBA,WAE3C,GAAI3C,EACF,OACE,8BACE,oBAAGmB,UAAU,WAAb,UACE,wBAAQA,UAAU,KAAKE,QAAS,kBAAMZ,EAAMmC,OAAOV,IAAnD,SACE,mBAAGZ,MAAM,0BAEX,wBAAQH,UAAU,UAAUI,MAAOmB,EAZ7B,CACZL,MAAO,oBAWsD,KAAvD,SACGxC,IAGH,uBACE0B,MAAO,CACLsB,SAAU,GACVC,UAAW,UAHf,UAMG,KACA/C,KAEH,wBAAQoB,UAAU,SAASE,QAAS,kBAAMZ,EAAMsC,OAAOb,IAAvD,SACE,mBAAGZ,MAAM,wBAMjB,IAAM0B,EAAS,IAAIvD,KAAKkD,GAAYM,qBACpC,OACE,8BACE,8BACE,wCAAWpD,KACX,uBAFF,aAGY,qCAAQmD,KAClB,wBAAQ7B,UAAU,SAASE,QAAS,kBAAMZ,EAAMsC,OAAOb,IAAvD,SACE,mBAAGZ,MAAM,yBCyCN4B,EAlFE,SAACzC,GAChB,IAAMT,EAASS,EAAM0C,MAAMC,QAAO,SAACX,GAAD,OAAUA,EAAKzC,UAC3CqD,EAAO5C,EAAM0C,MAAMC,QAAO,SAACX,GAAD,OAAWA,EAAKzC,UAK5CqD,EAAKC,QAAU,GACjBD,EAAKE,MAAK,SAACC,EAAGC,GACZ,OAAID,EAAEb,WAAac,EAAEd,YACX,EAENa,EAAEb,WAAac,EAAEd,WACZ,EAEF,KAIP3C,EAAOsD,QAAU,GACnBtD,EAAOuD,MAAK,SAACC,EAAGC,GAId,OAHAD,EAAIA,EAAE3D,KAAK6D,gBACXD,EAAIA,EAAE5D,KAAK6D,gBAEQ,EACfF,EAAIC,EAAU,EACX,KAIX,IAAME,EAAc3D,EAAO4D,KAAI,SAACnB,GAAD,OAC7B,cAAC,EAAD,CAEEA,KAAMA,EACNM,OAAQtC,EAAMsC,OACdH,OAAQnC,EAAMmC,QAHTH,EAAKP,OAMR2B,EAAYR,EAAKO,KAAI,SAACnB,GAAD,OACzB,cAAC,EAAD,CAEEA,KAAMA,EACNM,OAAQtC,EAAMsC,OACdH,OAAQnC,EAAMmC,QAHTH,EAAKP,OAOd,OACE,qCACE,sBAAKf,UAAU,SAAf,UACE,sDACCwC,EAAYL,OAAS,EACpBK,EAEA,mBACEpC,MAAO,CACLc,MAAO,mBACPyB,WAAY,KAHhB,0CAWJ,uBAEA,sBAAK3C,UAAU,OAAf,UACE,qBAAIA,UAAU,UAAd,8BACmB,mCAAMkC,EAAKC,OAAX,UAElBD,EAAKC,OAAS,GACb,sBAAM/B,MAAO,CAAEsB,SAAU,QAAzB,4DAIDgB,EAAUlE,MAAM,EAAG,UCcboE,E,4MAvFbC,QAAU,E,EAEVpE,MAAQ,CACNuD,MAAO,I,EAoBTc,WAAa,SAAC/B,GAQZ,IAAIiB,EAAK,YAAO,EAAKvD,MAAMuD,OAC3BA,EAAQA,EAAMC,QAAO,SAACX,GAAD,OAAUA,EAAKP,KAAOA,KAC3C,EAAK/B,SAAS,CACZgD,W,EAIJe,iBAAmB,SAAChC,GAClB,IAAMiB,EAAQgB,MAAMC,KAAK,EAAKxE,MAAMuD,OACpCA,EAAMkB,SAAQ,SAAC5B,GACTA,EAAKP,KAAOA,IACdO,EAAKzC,QAAS,EACdyC,EAAKE,YAAa,IAAIlD,MAAO6E,cAGjC,EAAKnE,SAAS,CACZgD,W,EAIJoB,QAAU,SAAC1E,EAAME,EAAM2C,GACrB,IAAMD,EAAO,CACXP,GAAI,EAAK8B,QACTnE,KAAMA,EACNE,OACA2C,YACA1C,QAAQ,EACR2C,WAAY,MAQd,OANA,EAAKqB,UACa,KAAdvB,EAAK5C,MACP,EAAKM,UAAS,SAACqE,GAAD,MAAgB,CAC5BrB,MAAM,GAAD,mBAAMqB,EAAUrB,OAAhB,CAAuBV,SAGzB,G,4CAGT,WACE,OACE,sBAAKtB,UAAU,MAAf,UACE,kDACA,oDACA,cAAC,EAAD,CAASA,UAAU,WAAWT,IAAKE,KAAK2D,UACxC,uBACA,cAAC,EAAD,CACEpD,UAAU,WACVgC,MAAOvC,KAAKhB,MAAMuD,MAClBJ,OAAQnC,KAAKqD,WACbrB,OAAQhC,KAAKsD,0B,GAjFL3B,aCOHkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ce9ebd79.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Addtask.css\";\r\n\r\nclass AddTask extends Component {\r\n  minDate = new Date().toISOString().slice(0, 10);\r\n\r\n  state = {\r\n    text: \"\",\r\n    checked: false,\r\n    date: this.minDate,\r\n    active: false,\r\n  };\r\n\r\n  handleText = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  };\r\n  handleCheckbox = (e) => {\r\n    this.setState({\r\n      checked: e.target.checked,\r\n    });\r\n  };\r\n\r\n  handleDate = (e) => {\r\n    this.setState({\r\n      date: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { text, checked, date } = this.state;\r\n\r\n    const add = this.props.add(text, date, checked);\r\n    if (add && text !== \"\") {\r\n      this.setState({\r\n        text: \"\",\r\n        checked: false,\r\n        date: this.minDate,\r\n        active: !this.state.active,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let maxDate = this.minDate.slice(0, 4) * 1 + 1;\r\n    maxDate = maxDate + \"-12-31\";\r\n\r\n    const styles = {\r\n      form_off: {\r\n        display: \"none\",\r\n      },\r\n      form_oon: {\r\n        display: \"block\",\r\n      },\r\n    };\r\n\r\n    const classes = [];\r\n    if (this.state.active) classes.push(\"btnLess\");\r\n    if (!this.state.active) classes.push(\"btnMore\");\r\n\r\n    return (\r\n      <>\r\n        <button\r\n          // style={this.state.active ? styles.btn_on : styles.btn_off}\r\n          className={classes.join(\" \")}\r\n          onClick={() => this.setState({ active: !this.state.active })}\r\n        >\r\n          {this.state.active ? <i class=\"fas fa-sort-up\"></i> : \"+\"}\r\n        </button>\r\n        <div\r\n          className=\"form\"\r\n          style={this.state.active ? styles.form_on : styles.form_off}\r\n        >\r\n          <input\r\n            className=\"taskTextInput\"\r\n            type=\"text\"\r\n            placeholder=\"zadanie...\"\r\n            value={this.state.text}\r\n            onChange={this.handleText}\r\n          />\r\n          <br />\r\n          <label htmlFor=\"date\">Czas na wykonanie:</label>\r\n          <input\r\n            style={{\r\n              borderRadius: 10,\r\n            }}\r\n            type=\"date\"\r\n            value={this.state.date}\r\n            min={this.minDate}\r\n            max={maxDate}\r\n            onChange={this.handleDate}\r\n          />\r\n          <br />\r\n          <input\r\n            style={{\r\n              height: 20,\r\n              width: 20,\r\n            }}\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            id=\"important\"\r\n            onChange={this.handleCheckbox}\r\n          />\r\n          <label htmlFor=\"important\">Priorytet!</label>\r\n          <button\r\n            style={{\r\n              borderRadius: 5,\r\n              cursor: \"pointer\",\r\n              backgroundColor: \"transparent\",\r\n              color: \"rgb(241, 248, 174)\",\r\n              border: \"2px solid white\",\r\n            }}\r\n            onClick={this.handleClick}\r\n          >\r\n            Dodaj\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nconst Task = (props) => {\r\n  const style = {\r\n    color: \"rgb(207, 90, 12)\",\r\n  };\r\n  const { text, date, id, active, important, finishDate } = props.task;\r\n\r\n  if (active) {\r\n    return (\r\n      <div>\r\n        <p className=\"todotask\">\r\n          <button className=\"ok\" onClick={() => props.change(id)}>\r\n            <i class=\"far fa-check-circle\"></i>\r\n          </button>\r\n          <strong className=\"oneTask\" style={important ? style : null}>\r\n            {text}\r\n          </strong>\r\n\r\n          <span\r\n            style={{\r\n              fontSize: 18,\r\n              fontStyle: \"italic\",\r\n            }}\r\n          >\r\n            {\" -\"}\r\n            {date}\r\n          </span>\r\n          <button className=\"cancel\" onClick={() => props.delete(id)}>\r\n            <i class=\"fas fa-trash\"></i>\r\n          </button>\r\n        </p>\r\n      </div>\r\n    );\r\n  } else {\r\n    const finish = new Date(finishDate).toLocaleDateString();\r\n    return (\r\n      <div>\r\n        <p>\r\n          <strong>- {text}</strong>\r\n          <br />\r\n          wykonano: <span> {finish}</span>\r\n          <button className=\"cancel\" onClick={() => props.delete(id)}>\r\n            <i class=\"fas fa-trash\"></i>\r\n          </button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nconst TaskList = (props) => {\r\n  const active = props.tasks.filter((task) => task.active);\r\n  const done = props.tasks.filter((task) => !task.active);\r\n\r\n  // done.sort((a, b) => {\r\n  //   return b.finishDate - a.finishDate;\r\n  // });\r\n  if (done.length >= 2) {\r\n    done.sort((a, b) => {\r\n      if (a.finishDate > b.finishDate) {\r\n        return -1;\r\n      }\r\n      if (a.finishDate < b.finishDate) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  if (active.length >= 2) {\r\n    active.sort((a, b) => {\r\n      a = a.text.toLowerCase();\r\n      b = b.text.toLowerCase();\r\n\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const activeTasks = active.map((task) => (\r\n    <Task\r\n      key={task.id}\r\n      task={task}\r\n      delete={props.delete}\r\n      change={props.change}\r\n    />\r\n  ));\r\n  const doneTasks = done.map((task) => (\r\n    <Task\r\n      key={task.id}\r\n      task={task}\r\n      delete={props.delete}\r\n      change={props.change}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"active\">\r\n        <h2>Zadania do zrobienia</h2>\r\n        {activeTasks.length > 0 ? (\r\n          activeTasks\r\n        ) : (\r\n          <p\r\n            style={{\r\n              color: \"rgb(98, 163, 24)\",\r\n              fontWeight: 700,\r\n            }}\r\n          >\r\n            Nie masz nic do roboty :)\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"done\">\r\n        <h2 className=\"oldTask\">\r\n          Zadania zrobione <em>({done.length})</em>\r\n        </h2>\r\n        {done.length > 5 && (\r\n          <span style={{ fontSize: \"14px\" }}>\r\n            Wyświetlonych jest ostatnich 5 zadań\r\n          </span>\r\n        )}\r\n        {doneTasks.slice(0, 5)}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport AddTask from \"./Addtask\";\nimport TaskList from \"./TaskList\";\n\nclass App extends Component {\n  counter = 1;\n\n  state = {\n    tasks: [\n      // {\n      //   id: 0,\n      //   text: \"zagrać wreszcie w Wiedźmina 3\",\n      //   date: \"2018-02-15\",\n      //   important: true,\n      //   active: true,\n      //   finishDate: null,\n      // },\n      // {\n      //   id: 1,\n      //   text: \"ugotować obiad\",\n      //   date: \"2018-03-18\",\n      //   important: false,\n      //   active: true,\n      //   finishDate: null,\n      // },\n    ],\n  };\n\n  deleteTask = (id) => {\n    // const tasks = [...this.state.tasks];\n    // const index = tasks.findIndex((task) => task.id === id);\n    // tasks.splice(index, 1);\n    // this.setState({\n    //   tasks,\n    // });\n\n    let tasks = [...this.state.tasks];\n    tasks = tasks.filter((task) => task.id !== id);\n    this.setState({\n      tasks,\n    });\n  };\n\n  changeTaskStatus = (id) => {\n    const tasks = Array.from(this.state.tasks);\n    tasks.forEach((task) => {\n      if (task.id === id) {\n        task.active = false;\n        task.finishDate = new Date().getTime();\n      }\n    });\n    this.setState({\n      tasks,\n    });\n  };\n\n  addTask = (text, date, important) => {\n    const task = {\n      id: this.counter,\n      text: text, // tekst z input\n      date, // tekst z input\n      important, // tekst z input\n      active: true,\n      finishDate: null,\n    };\n    this.counter++;\n    if (task.text !== \"\") {\n      this.setState((prevState) => ({\n        tasks: [...prevState.tasks, task],\n      }));\n    }\n    return true;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>LISTA ZADAŃ</h1>\n        <h2>Dodaj nowe zadanie</h2>\n        <AddTask className=\"Addtasks\" add={this.addTask} />\n        <hr />\n        <TaskList\n          className=\"TaskList\"\n          tasks={this.state.tasks}\n          delete={this.deleteTask}\n          change={this.changeTaskStatus}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}